@import "variables";

// ------- S P A C I N G helpers ******************
//-------------------------------------------------
// grab spacing values from $spacers map in variables.scss bootstrap file
@function spacer($size, $value) {
  @return map-get(map-get($spacers, $size), $value);
}

// create reusable spacing sass variables (ex. padding: $s-1 // equals 0.25rem)
$s-1: spacer(1, x); // 0.25rem
$s-2: spacer(2, x); // 0.5rem
$s-3: spacer(3, x); // 1rem
$s-4: spacer(4, x); // 1.5rem
$s-5: spacer(5, x); // 3rem


// ------- F O N T S I Z E helpers ****************
//-------------------------------------------------
$font-size: (
  "f-xxs": $font-size-base / (1.5),
  "f-xs": $font-size-base / (1.2),
  "f-s": $font-size-base / (1.1),
  "f-r": $font-size-base,
  "f-m": $font-size-base * 1.1,
  "f-l": $font-size-base * 1.3,
  "f-xl": $font-size-base * 1.5,
  "f-xxl": $font-size-base * 2
);

// create classes
@each $font, $size in $font-size {
  .#{$font} {
    font-size: $size
  }
}

// create sass variables
@function fontsize($size) {
  @return map-get($font-size, $size);
}

$f-xxs: fontsize("f-xxs");
$f-xs: fontsize("f-xs");
$f-s: fontsize("f-s");
$f-r: fontsize("f-r");
$f-m: fontsize("f-m");
$f-l: fontsize("f-l");
$f-xl: fontsize("f-xl");
$f-xxl: fontsize("f-xxl");

// ------- P O S I T I O N I N G helpers **********
//-------------------------------------------------
// centering -- https://css-tricks.com/snippets/sass/centering-mixin/
@mixin centerer($horizontal: true, $vertical: true) {
  position: absolute;
  @if ($horizontal and $vertical) {
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
  } @else if ($horizontal) {
    left: 50%;
    -webkit-transform: translate(-50%, 0);
            transform: translate(-50%, 0);
  } @else if ($vertical) {
    top: 50%;
    -webkit-transform: translate(0, -50%);
            transform: translate(0, -50%);
  }
}

/* Calculate fluid ratio based on two dimensions (width/height) */
@mixin fluid-ratio($large-size, $small-size) {
  $width-large: nth($large-size, 1);
  $width-small: nth($small-size, 1);
  $height-large: nth($large-size, 2);
  $height-small: nth($small-size, 2);
  $slope: ($height-large - $height-small) / ($width-large - $width-small);
  $height: $height-small - $width-small * $slope;
  background-size: cover;
  -moz-background-size: cover;  /* Firefox 3.6 */
  background-position: center;  /* Internet Explorer 7/8 */
}

// ------- BOOTSTRAP OVERRIDES **********
//-------------------------------------------------
